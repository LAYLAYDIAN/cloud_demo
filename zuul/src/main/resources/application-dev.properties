eureka.client.service-url.defaultZone=http://center1.com:8000/eureka
spring.application.name=zuul
erver.servlet.encoding.force=true
server.servlet.encoding.charset=UTF-8
server.tomcat.uri-encoding=UTF-8
server.tomcat.threads.max=1000
management.port=80
server.port=9092
server.servlet.context-path=/

#zuul 配置信息
#uul.routes.{routename} | 路由名称，自定义，支持小写字母、- |
#zuul.routes.{routename}.path | 要路由的路径，支持通配符：?、_ 、*_ |
#zuul.routes.{routename}.serviceId | 注册在Eureka的ServiceName |
#zuul.routes.{routename}.url | 如果应用没有注册在Eureka，也可以通过指定Url来路由 |
#1.路由到到不同的服务
   #例子consumer_ribbon模块转发
#zuul.routes.api-ribbon=consumer_ribbon
zuul.routes.api-ribbon.path=/api-ribbon/**
zuul.routes.api-ribbon.serviceId=consumer_ribbon
#zuul.routes.api-ribbon.url=/consumer_ribbon/**
  #例子consumer_feign模块转发
#zuul.routes.api-feign=consumer_feign
zuul.routes.api-feign.path=/api-feign/**
zuul.routes.api-feign.serviceId=consumer_feign
#zuul.routes.api-feign.url=/consumer_feign/**
#2.路由到指定站点：某应用并没有注册到服务注册中心(Eureka)，但又需要可以通过指定url的访问
#zuul.routes.ken-io.path=/ken/**
#zuul.routes.ken-io.url=https://ken.io/
#3.忽略指定路径 可以配置多个，以,间隔。同样支持通配符
#zuul.ignored-patterns=/**/hs,/**/health
#4.不同API路由统一前缀
  #忽略指定的服务,可以配置多个，以,间隔 |
 #zuul.ignored-services=*
  #配置访问前缀 给网关路由添加前缀
  #zuul.prefix=/api
  #zuul.routes.organizationservice=/organization/**
  #zuul.routes.licenseservice=/license/**
#5.Header过滤及重定向添加Host
  #配置过滤敏感的请求头信息，设置为空就不会过滤
  zuul.sensitive-headers= Cookie,Set-Cookie,Authorization
#设置为true重定向是会添加host请求头
 zuul.add-host-header=true
# 关闭重试机制
zuul.retryable=true
# 控制是否启用过滤器
zuul.PreLogFilter.pre.disable=true
